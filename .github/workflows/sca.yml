name: SCA - Dependency Review & pip-audit (local)

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  dependency_review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Dependency Review (PR diff)
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high

  pip_audit_local:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug – listar arquivos da raiz
        run: ls -lah

      - name: Garantir requirements.txt
        shell: bash
        run: |
          if [ ! -s "requirements.txt" ]; then
            echo "Nenhum requirements.txt encontrado OU o arquivo está vazio."
            echo '{"info":"Nenhum requirements.txt encontrado ou arquivo vazio.","results":[]}' > sca-report.json
            echo "Nenhum requirements.txt encontrado ou arquivo vazio." > sca-report.txt
            exit 0
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Criar venv e instalar dependências
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Instalar pip-audit
        shell: bash
        run: |
          source .venv/bin/activate
          python -m pip install pip-audit

      # Audita o que foi instalado no venv (modo "local")
      - name: Rodar pip-audit (local) e gerar JSON+TXT
        shell: bash
        run: |
          set +e
          source .venv/bin/activate
          pip-audit --format json -o sca-report.json
          PA_RC=$?
          pip-audit > sca-report.txt || true
          echo "Exit code pip-audit: ${PA_RC}" | tee -a sca-report.txt
          # Fallback se o JSON não existir ou estiver vazio
          if [ ! -f sca-report.json ] || [ ! -s sca-report.json ]; then
            echo "WARN: sca-report.json não foi gerado ou está com 0 bytes. Criando JSON de fallback."
            echo "{\"info\":\"pip-audit (local) não gerou saída JSON (exit=${PA_RC}). Veja sca-report.txt para detalhes.\",\"results\":[]}" > sca-report.json
          fi
          ls -lah sca-report.json sca-report.txt || true

      - name: Upload SCA report (JSON + TXT)
        uses: actions/upload-artifact@v4
        with:
          name: sca-report
          path: |
            sca-report.json
            sca-report.txt
          retention-days: 7
          if-no-files-found: warn
